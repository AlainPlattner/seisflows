#!/usr/bin/env python

from seisflows.tools.config import loadclass, loadvars, ConfigObj, \
    ParameterObj, ParameterError

PAR = ParameterObj('SeisflowsParameters')
PATH = ParameterObj('SeisflowsPaths')
OBJ = ConfigObj('SeisflowsObjects')

register = OBJ.register


if __name__ == '__main__':
    """ First, loads parameters and paths from the working directory.

      Second, loads the following seisflows objects: system, preprocess, 
      solver, postprocess, optimize, worfklow.  This list is effectively
      hardcoded; changing the names of seisflows objects or the order in which
      objects are loaded can result in circular imports or other errors.

      Third, peforms parameter checking.

      Fourth, executes workflow.main via system.submit
    """

    # load parameters and paths from working directory
    PAR.update(loadvars('parameters', '.'))
    PATH.update(loadvars('paths', '.'))

    if 'SYSTEM' not in PAR:
        raise ParameterError(PAR, 'SYSTEM')

    if 'PREPROCESS' not in PAR:
        raise ParameterError(PAR, 'PREPROCESS')

    if 'SOLVER' not in PAR:
        raise ParameterError(PAR, 'SOLVER')

    if 'POSTPROCESS' not in PAR:
        raise ParameterError(PAR, 'POSTPROCESS')

    if 'OPTIMIZE' not in PAR:
        raise ParameterError(PAR, 'OPTIMIZE')

    if 'WORKFLOW' not in PAR:
        raise ParameterError(PAR, 'WORKFLOW')


    # load seisflows objects
    system = loadclass('system', PAR.SYSTEM)()
    register('system', system)

    preprocess = loadclass('preprocess', PAR.PREPROCESS)()
    register('preprocess', preprocess)

    solver = loadclass('solver', PAR.SOLVER)()
    register('solver', solver)

    postprocess = loadclass('postprocess', PAR.POSTPROCESS)()
    register('postprocess', postprocess)

    optimize = loadclass('optimize', PAR.OPTIMIZE)()
    register('optimize', optimize)

    workflow = loadclass('workflow', PAR.WORKFLOW)()
    register('workflow', workflow)


    # carry out parameter checks
    system.check()
    workflow.check()
    solver.check()
    optimize.check()
    preprocess.check()
    postprocess.check()


    # submit "workflow" via "system"
    system.submit(workflow)

