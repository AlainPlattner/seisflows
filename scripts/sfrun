#!/usr/bin/python -u

from seisflows.tools.configtools import loadclass, loadvars, ConfigObj, ParameterObj

PAR = ParameterObj('SeisflowsParameters')
PATH = ParameterObj('SeisflowsPaths')
OBJ = ConfigObj('SeisflowsObjects')

PAR.update(loadvars('parameters','.'))
PATH.update(loadvars('paths','.'))


if __name__ == '__main__':
    """ Loads and checks parameters and objects and submits SeisFlows workflow
    """

    # check parameters
    if 'SYSTEM' not in PAR:
        raise Exception

    if 'OPTIMIZE' not in PAR:
        setattr(PAR,'OPTIMIZE','default')

    if 'PREPROCESS' not in PAR:
        setattr(PAR,'PREPROCESS','default')

    if 'POSTPROCESS' not in PAR:
        setattr(PAR,'POSTPROCESS','default')

    if 'SOLVER' not in PAR:
        raise Exception

    if 'WORKFLOW' not in PAR:
        raise Exception


    # load objects
    system = loadclass('system',PAR.SYSTEM)()
    solver = loadclass('solver',PAR.SOLVER)()
    optimize = loadclass('optimize',PAR.OPTIMIZE)()
    preprocess = loadclass('preprocess',PAR.PREPROCESS)()
    postprocess = loadclass('postprocess',PAR.POSTPROCESS)()
    workflow = loadclass('workflow',PAR.WORKFLOW)()


    # register objects
    register=OBJ.register
    register('system',system)
    register('solver',solver)
    register('optimize',optimize)
    register('preprocess',preprocess)
    register('postprocess',postprocess)
    register('workflow',workflow)


    # check objects
    system.check()
    solver.check()
    optimize.check()
    preprocess.check()
    postprocess.check()
    workflow.check()   


    # submit job
    system.submit(workflow)

