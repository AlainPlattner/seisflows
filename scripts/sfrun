#!/usr/bin/python -u

import sys

from seisflows.tools.codetools import join
from seisflows.tools.configtools import getclass, ParameterObject

sys.path.append('.')
import parameters
import paths

PAR = ParameterObject('parameters')
PATH = ParameterObject('paths')

system = getclass('system',PAR.SYSTEM)()


if __name__ == '__main__':

    # configure paths
    if 'GLOBAL' not in PATH: 
        raise Exception

    if 'LOCAL' not in PATH:
        raise Exception

    if 'SUBMIT_DIR' not in PATH: 
        raise Exception

    if 'SUBMIT_HOST' not in PATH: 
        raise Exception

    if 'SYSTEM' not in PATH: 
        PATH.SYSTEM = join(PATH.GLOBAL,'system')

    if 'WORKFLOW' not in PATH: 
        PATH.WORKFLOW = join(PATH.GLOBAL,'workflow')

    if 'OPTIMIZE' not in PATH:
        PATH.OPTIMIZE = join(PATH.GLOBAL,'optimize')

    if 'PREPROCESS' not in PATH:
        PATH.PREPROCESS = join(PATH.GLOBAL,'preprocess')

    if 'POSTPROCESS' not in PATH:
        PATH.POSTPROCESS = join(PATH.GLOBAL,'postprocess')

    if 'SOLVER' not in PATH:
        PATH.SOLVER = join(PATH.GLOBAL,'solver')


    # check import system by instantiating each class once
    if 'WORKFLOW' not in PAR: raise Exception
    getclass('workflow',PAR.WORKFLOW)()

    if 'OPTIMIZE' not in PAR: setattr(PAR,'OPTIMIZE','default')
    getclass('optimize',PAR.OPTIMIZE)()

    if 'PREPROCESS' not in PAR: setattr(PAR,'PREPROCESS','default')
    getclass('preprocess',PAR.PREPROCESS)()

    if 'POSTPROCESS' not in PAR: setattr(PAR,'POSTPROCESS','default')
    getclass('postprocess',PAR.POSTPROCESS)()

    if 'SOLVER' not in PAR: raise Exception
    getclass('solver',PAR.SOLVER)()


    # submit job
    workflow = getclass('workflow',PAR.WORKFLOW)
    system.submit(workflow)

